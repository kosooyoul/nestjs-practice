type MeResponse {
  """계정 아이디"""
  _id: ID!

  """계정 이메일"""
  email: String!

  """계정 사용자 이름"""
  username: String!

  """수정한 날짜 시간"""
  updatedAt: DateTime!

  """등록한 날짜 시간"""
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SignInResponse {
  """사용자 계정 인증 토큰"""
  accessToken: String!

  """사용자 계정 인증 리프레시 토큰"""
  refreshToken: String!

  """만료 날짜 시간"""
  expiresIn: DateTime!
}

type SignUpResponse {
  """사용자 계정 인증 토큰"""
  accessToken: String!

  """사용자 계정 인증 리프레시 토큰"""
  refreshToken: String!

  """만료 날짜 시간"""
  expiresIn: DateTime!
}

type SignOutResponse {
  """성공 여부"""
  success: Boolean!
}

type RefreshSignResponse {
  """사용자 계정 인증 토큰"""
  accessToken: String!

  """사용자 계정 인증 리프레시 토큰"""
  refreshToken: String!

  """만료 날짜 시간"""
  expiresIn: DateTime!
}

type Query {
  """내 계정 정보 조회"""
  me: MeResponse!
}

type Mutation {
  """회원 가입"""
  signUp(input: SignUpRequest!): SignUpResponse!

  """로그인"""
  signIn(input: SignInRequest!): SignInResponse!

  """로그아웃"""
  signOut: SignOutResponse!

  """인증 리프레시"""
  refreshSign(input: RefreshSignRequest!): RefreshSignResponse!
}

input SignUpRequest {
  """로그인 이메일"""
  email: String!

  """로그인 비밀번호"""
  password: String!

  """계정 사용자 이름"""
  username: String!
}

input SignInRequest {
  """로그인 이메일"""
  email: String!

  """로그인 비밀번호"""
  password: String!

  """로그인을 유지할지 여부"""
  keep: Boolean = false
}

input RefreshSignRequest {
  """인증 리프레시 토큰"""
  refreshToken: String!
}